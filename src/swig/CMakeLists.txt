cmake_minimum_required(VERSION 3.0)

FUNCTION(PYFIND)
    set(options "")
    set(oneValueArgs "")
    set(multiValueArgs VERSION)

    cmake_parse_arguments(PYFIND "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    unset(PYTHON_INCLUDE_PATH CACHE)
    unset(PYTHONLIBS_FOUND CACHE)
    unset(PYTHON_LIBRARY CACHE)
    unset(PYTHON_LIBRARIES CACHE)
    unset(PYTHON_INCLUDE_DIR CACHE)
    unset(PYTHON_INCLUDE_DIRS CACHE)
    unset(PYTHON_DEBUG_LIBRARIES CACHE)
    unset(PYTHONLIBS_VERSION_STRING CACHE)

    unset(PYTHONINTERP_FOUND CACHE)
    unset(PYTHON_EXECUTABLE CACHE)
    unset(PYTHON_VERSION_STRING CACHE)
    unset(PYTHON_VERSION_MAJOR CACHE)
    unset(PYTHON_VERSION_MINOR CACHE)
    unset(PYTHON_VERSION_PATCH CACHE)
    set(Python_ADDITIONAL_VERSIONS ${PYFIND_VERSION})
    find_package(PythonInterp ${PYFIND_VERSION} REQUIRED)
    find_package(PythonLibs ${PYFIND_VERSION} REQUIRED)
    set(PYTHON${PYFIND_VERSION}_EXE ${PYTHON_EXECUTABLE} CACHE STRING "")
    set(PYTHON${PYFIND_VERSION}_INCLUDE ${PYTHON_INCLUDE_DIRS} CACHE STRING "")
    set(PYTHON${PYFIND_VERSION}_LIB ${PYTHON_LIBRARIES} CACHE STRING "")
ENDFUNCTION()

function(add_python_bindings py_version)
    PYFIND(VERSION ${py_version})
    SET(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR}/python${py_version}/levtree)

    set(IFLAGS "")
    get_target_property(IPATH levtree INTERFACE_INCLUDE_DIRECTORIES)
    foreach(PATH ${IPATH})
        list(APPEND IFLAGS -I${PATH})
    endforeach()
    SET(CMAKE_SWIG_FLAGS -builtin -O -I${PYTHON${py_version}_INCLUDE} -I${LEVTREE_SOURCE_DIR} -I${LEVTREE++_SOURCE_DIR})
    SET_SOURCE_FILES_PROPERTIES(levtree.i PROPERTIES CPLUSPLUS ON)
    swig_add_library(pylevtree${py_version} LANGUAGE python SOURCES levtree.i)
    SWIG_LINK_LIBRARIES(pylevtree${py_version} levtree++ ${PYTHON${py_version}_LIB})
    TARGET_INCLUDE_DIRECTORIES(_pylevtree${py_version} PRIVATE ${PYTHON${py_version}_INCLUDE} ${CMAKE_CURRENT_SOURCE_DIR})
    set_target_properties(${SWIG_MODULE_pylevtree${py_version}_REAL_NAME} PROPERTIES
        LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SWIG_OUTDIR}
        OUTPUT_NAME _levtreecpp
        )
    configure_file(__init__.py ${CMAKE_SWIG_OUTDIR}/__init__.py)
    set(SETUP_INTERP ${PYTHON${py_version}_EXE})
    configure_file(setup.py ${CMAKE_CURRENT_BINARY_DIR}/python${py_version}/setup.py)
endfunction()

if(PYTHON2_BINDINGS)
    FIND_PACKAGE(SWIG REQUIRED)
    INCLUDE(${SWIG_USE_FILE})
    add_python_bindings(2)
endif()
if(PYTHON3_BINDINGS)
    FIND_PACKAGE(SWIG REQUIRED)
    INCLUDE(${SWIG_USE_FILE})
    add_python_bindings(3)
endif()

if(JAVA_BINDINGS)
    FIND_PACKAGE(SWIG REQUIRED)
    INCLUDE(${SWIG_USE_FILE})
    find_package(JNI)
    if(JNI_FOUND)
        SET(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR}/java/)
        SET(CMAKE_SWIG_FLAGS -O -I${PYTHON${py_version}_INCLUDE} -I${LEVTREE_SOURCE_DIR} -I${LEVTREE++_SOURCE_DIR})
        SET_SOURCE_FILES_PROPERTIES(levtree.i PROPERTIES CPLUSPLUS ON)
        swig_add_library(jlevtree LANGUAGE java SOURCES levtree.i)
        SWIG_LINK_LIBRARIES(jlevtree levtree++)
        target_include_directories(jlevtree PRIVATE ${JNI_INCLUDE_DIRS})
        set_target_properties(${SWIG_MODULE_jlevtree_REAL_NAME} PROPERTIES
            LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SWIG_OUTDIR}
        )
    endif()
endif()
